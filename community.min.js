// Community Engagement Features
const Community = {
    init() {
        this.setupStorySubmission();
        this.setupSocialProof();
    },

    setupStorySubmission() {
        const getInvolvedSection = document.getElementById('get-involved');
        if (!getInvolvedSection) return;

        const storyForm = document.createElement('div');
        storyForm.className = 'story-submission';
        storyForm.innerHTML = `
            <h3>Share Your Climate Story</h3>
            <form id="storyForm">
                <input type="text" name="name" placeholder="Your Name" required>
                <input type="text" name="location" placeholder="Your Location" required>
                <textarea name="story" placeholder="Tell us about your climate action or experience..." rows="4" required></textarea>
                <button type="submit" class="btn btn-primary">Share Story</button>
            </form>
        `;

        getInvolvedSection.querySelector('.container').appendChild(storyForm);

        document.getElementById('storyForm').addEventListener('submit', (e) => {
            e.preventDefault();
            this.submitStory(new FormData(e.target));
        });
    },

    submitStory(formData) {
        const story = {
            name: formData.get('name'),
            location: formData.get('location'),
            story: formData.get('story'),
            timestamp: new Date().toISOString()
        };

        if (typeof gtag !== 'undefined') {
            gtag('event', 'story_submit', {
                event_category: 'engagement',
                event_label: 'community_story'
            });
        }

        alert('Thank you for sharing your story! It will be reviewed before publication.');
        document.getElementById('storyForm').reset();
    },

    setupSocialProof() {
        this.updateSocialCounters();
        setInterval(() => this.updateSocialCounters(), 30000); // Update every 30 seconds
    },

    updateSocialCounters() {
        const counters = document.querySelectorAll('.proof-number');
        counters.forEach(counter => {
            const target = parseInt(counter.dataset.count);
            const current = parseInt(counter.textContent);
            if (current < target) {
                counter.textContent = Math.min(current + Math.ceil(Math.random() * 5), target);
            }
        });
    }
};

document.addEventListener('DOMContentLoaded', () => {
    Community.init();
});