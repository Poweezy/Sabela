// Form Security and Validation
const Security = {
    // XSS Protection
    sanitize: (str) => str.replace(/[<>\"']/g, (match) => ({
        '<': '&lt;', '>': '&gt;', '"': '&quot;', "'": '&#x27;'
    })[match]),
    
    // Rate limiting
    rateLimiter: new Map(),
    
    checkRateLimit: (key, limit = 5, window = 60000) => {
        const now = Date.now();
        const attempts = Security.rateLimiter.get(key) || [];
        const recent = attempts.filter(time => now - time < window);
        
        if (recent.length >= limit) return false;
        
        recent.push(now);
        Security.rateLimiter.set(key, recent);
        return true;
    },
    
    // Form validation
    validateForm: (form) => {
        const inputs = form.querySelectorAll('input, textarea');
        let isValid = true;
        
        inputs.forEach(input => {
            const value = Security.sanitize(input.value.trim());
            input.value = value;
            
            if (input.required && !value) {
                input.classList.add('is-invalid');
                isValid = false;
            } else {
                input.classList.remove('is-invalid');
                input.classList.add('is-valid');
            }
        });
        
        return isValid;
    }
};

// Apply to all forms
document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('form').forEach(form => {
        form.addEventListener('submit', (e) => {
            if (!Security.checkRateLimit(form.id || 'form')) {
                e.preventDefault();
                alert('Too many attempts. Please wait before trying again.');
                return;
            }
            
            if (!Security.validateForm(form)) {
                e.preventDefault();
            } else if (typeof trackEvent !== 'undefined') {
                trackEvent('submit', 'form', form.id || 'unknown');
            }
        });
    });
});