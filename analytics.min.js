// Enhanced Analytics Tracking
const Analytics = {
    init() {
        this.trackPageViews();
        this.trackScrollDepth();
        this.trackClicks();
        this.trackFormSubmissions();
    },

    trackPageViews() {
        // Track section views
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting && typeof gtag !== 'undefined') {
                    const sectionName = entry.target.id || entry.target.className;
                    gtag('event', 'section_view', {
                        event_category: 'engagement',
                        event_label: sectionName
                    });
                }
            });
        }, { threshold: 0.5 });

        document.querySelectorAll('section[id]').forEach(section => {
            observer.observe(section);
        });
    },

    trackScrollDepth() {
        let maxScroll = 0;
        window.addEventListener('scroll', () => {
            const scrollPercent = Math.round((window.scrollY / (document.body.scrollHeight - window.innerHeight)) * 100);
            if (scrollPercent > maxScroll && scrollPercent % 25 === 0) {
                maxScroll = scrollPercent;
                if (typeof gtag !== 'undefined') {
                    gtag('event', 'scroll_depth', {
                        event_category: 'engagement',
                        event_label: `${scrollPercent}%`
                    });
                }
            }
        });
    },

    trackClicks() {
        // Track CTA clicks
        document.querySelectorAll('.btn').forEach(btn => {
            btn.addEventListener('click', () => {
                if (typeof gtag !== 'undefined') {
                    gtag('event', 'cta_click', {
                        event_category: 'engagement',
                        event_label: btn.textContent.trim()
                    });
                }
            });
        });

        // Track resource downloads
        document.querySelectorAll('.download-link').forEach(link => {
            link.addEventListener('click', () => {
                if (typeof gtag !== 'undefined') {
                    gtag('event', 'download', {
                        event_category: 'resources',
                        event_label: link.href
                    });
                }
            });
        });
    },

    trackFormSubmissions() {
        document.querySelectorAll('form').forEach(form => {
            form.addEventListener('submit', () => {
                if (typeof gtag !== 'undefined') {
                    gtag('event', 'form_submit', {
                        event_category: 'conversion',
                        event_label: form.id || 'unknown_form'
                    });
                }
            });
        });
    }
};

document.addEventListener('DOMContentLoaded', () => {
    Analytics.init();
});