// UX Enhancement System
const UXEnhancements = {
    init() {
        this.addScrollProgress();
        this.enhanceNavigation();
        this.addLoadingStates();
        this.improveFormExperience();
        this.addParallaxEffects();
    },

    addScrollProgress() {
        const progressBar = document.createElement('div');
        progressBar.className = 'scroll-progress';
        document.body.appendChild(progressBar);

        window.addEventListener('scroll', () => {
            const scrolled = (window.scrollY / (document.documentElement.scrollHeight - window.innerHeight)) * 100;
            progressBar.style.width = scrolled + '%';
        });
    },

    enhanceNavigation() {
        const header = document.querySelector('.header');
        const mobileBtn = document.querySelector('.mobile-menu-btn');
        
        // Enhanced scroll behavior
        let lastScroll = 0;
        window.addEventListener('scroll', () => {
            const currentScroll = window.scrollY;
            
            if (currentScroll > 100) {
                header.classList.add('scrolled');
            } else {
                header.classList.remove('scrolled');
            }

            // Hide/show header on scroll
            if (currentScroll > lastScroll && currentScroll > 200) {
                header.style.transform = 'translateY(-100%)';
            } else {
                header.style.transform = 'translateY(0)';
            }
            lastScroll = currentScroll;
        });

        // Enhanced mobile menu
        if (mobileBtn) {
            mobileBtn.innerHTML = '<span></span>';
            mobileBtn.addEventListener('click', () => {
                mobileBtn.classList.toggle('active');
                document.querySelector('.nav-links').classList.toggle('active');
            });
        }
    },

    addLoadingStates() {
        document.querySelectorAll('form').forEach(form => {
            form.addEventListener('submit', (e) => {
                const submitBtn = form.querySelector('button[type="submit"]');
                if (submitBtn) {
                    submitBtn.classList.add('btn-loading');
                    submitBtn.disabled = true;
                    
                    setTimeout(() => {
                        submitBtn.classList.remove('btn-loading');
                        submitBtn.disabled = false;
                    }, 2000);
                }
            });
        });
    },

    improveFormExperience() {
        // Convert forms to floating labels
        document.querySelectorAll('input, textarea').forEach(input => {
            if (input.placeholder && !input.closest('.form-floating')) {
                const wrapper = document.createElement('div');
                wrapper.className = 'form-floating';
                
                const label = document.createElement('label');
                label.textContent = input.placeholder;
                label.setAttribute('for', input.id || 'input-' + Math.random().toString(36).substr(2, 9));
                
                input.placeholder = ' ';
                input.parentNode.insertBefore(wrapper, input);
                wrapper.appendChild(input);
                wrapper.appendChild(label);
            }
        });

        // Real-time validation feedback
        document.querySelectorAll('input[required], textarea[required]').forEach(input => {
            input.addEventListener('blur', () => {
                if (input.value.trim()) {
                    input.classList.add('is-valid');
                    input.classList.remove('is-invalid');
                } else {
                    input.classList.add('is-invalid');
                    input.classList.remove('is-valid');
                }
            });
        });
    },

    addParallaxEffects() {
        const parallaxElements = document.querySelectorAll('.hero-video, .hero-overlay');
        
        window.addEventListener('scroll', () => {
            const scrolled = window.scrollY;
            const rate = scrolled * -0.5;
            
            parallaxElements.forEach(el => {
                el.style.transform = `translateY(${rate}px)`;
            });
        });
    },

    // Smooth reveal animations
    observeElements() {
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, { threshold: 0.1 });

        document.querySelectorAll('.value-card, .program-card, .impact-card').forEach(el => {
            el.style.opacity = '0';
            el.style.transform = 'translateY(30px)';
            el.style.transition = 'all 0.6s ease';
            observer.observe(el);
        });
    }
};

// Enhanced number counter animation
const animateCounters = () => {
    document.querySelectorAll('[data-count]').forEach(counter => {
        const target = parseInt(counter.dataset.count);
        const duration = 2000;
        const step = target / (duration / 16);
        let current = 0;

        const timer = setInterval(() => {
            current += step;
            if (current >= target) {
                counter.textContent = target.toLocaleString();
                clearInterval(timer);
            } else {
                counter.textContent = Math.floor(current).toLocaleString();
            }
        }, 16);
    });
};

document.addEventListener('DOMContentLoaded', () => {
    UXEnhancements.init();
    UXEnhancements.observeElements();
    
    // Trigger counter animation when in view
    const counterObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                animateCounters();
                counterObserver.disconnect();
            }
        });
    });

    const statsSection = document.querySelector('.social-proof, .impact-grid');
    if (statsSection) counterObserver.observe(statsSection);
});