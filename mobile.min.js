// Mobile Experience Enhancements
const Mobile = {
    init() {
        this.optimizeTouch();
        this.optimizeLoading();
        this.addPullToRefresh();
    },

    optimizeTouch() {
        // Add touch feedback
        document.addEventListener('touchstart', (e) => {
            if (e.target.classList.contains('btn') || e.target.classList.contains('nav-link')) {
                e.target.style.transform = 'scale(0.95)';
            }
        });

        document.addEventListener('touchend', (e) => {
            if (e.target.classList.contains('btn') || e.target.classList.contains('nav-link')) {
                setTimeout(() => {
                    e.target.style.transform = '';
                }, 150);
            }
        });

        // Prevent zoom on double tap
        let lastTouchEnd = 0;
        document.addEventListener('touchend', (e) => {
            const now = Date.now();
            if (now - lastTouchEnd <= 300) {
                e.preventDefault();
            }
            lastTouchEnd = now;
        }, false);
    },

    optimizeLoading() {
        // Lazy load images
        const images = document.querySelectorAll('img[data-src]');
        const imageObserver = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const img = entry.target;
                    img.src = img.dataset.src;
                    img.removeAttribute('data-src');
                    imageObserver.unobserve(img);
                }
            });
        });

        images.forEach(img => imageObserver.observe(img));
    },

    addPullToRefresh() {
        let startY = 0;
        let pullDistance = 0;
        const threshold = 100;

        document.addEventListener('touchstart', (e) => {
            if (window.scrollY === 0) {
                startY = e.touches[0].clientY;
            }
        });

        document.addEventListener('touchmove', (e) => {
            if (window.scrollY === 0 && startY) {
                pullDistance = e.touches[0].clientY - startY;
                if (pullDistance > 0) {
                    document.body.style.transform = `translateY(${Math.min(pullDistance / 3, 50)}px)`;
                }
            }
        });

        document.addEventListener('touchend', () => {
            if (pullDistance > threshold) {
                location.reload();
            }
            document.body.style.transform = '';
            startY = 0;
            pullDistance = 0;
        });
    }
};

if ('ontouchstart' in window) {
    document.addEventListener('DOMContentLoaded', () => {
        Mobile.init();
    });
}